<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context.xsd
    					http://www.springframework.org/schema/aop
    					http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security.xsd">

	<context:annotation-config />
	<context:component-scan base-package="net.chat.security" />
	<global-method-security pre-post-annotations="enabled" />

	<http pattern="/resource/**" security="none" />
	<http pattern="/login.jsp" security="none" />
	<http pattern="/access-denied.jsp" security="none" />

	<http use-expressions='true' entry-point-ref="authenticationEntryPoint"
		access-denied-page="/access-denied.jsp">
		<intercept-url pattern="/account" access="hasRole('ROLE_account')" />
		<intercept-url pattern="/game" access="hasRole('ROLE_game')" />
		<intercept-url pattern="/message" access="hasRole('ROLE_game')" />
		<intercept-url pattern="/user" access="hasRole('ROLE_user')" />
		<intercept-url pattern="/replymsg" access="hasRole('ROLE_replymsg')" />
		<session-management invalid-session-url="/login.jsp">
			<concurrency-control max-sessions="10"
				error-if-maximum-exceeded="true" />
		</session-management>
		<custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER" />
		<custom-filter ref="authorizationFilter" before="FILTER_SECURITY_INTERCEPTOR" />
		<logout invalidate-session="true" logout-url="/j_spring_security_logout" />
	</http>
	<!-- 未登录的切入点 -->
	<beans:bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.jsp"></beans:property>
	</beans:bean>

	<!-- 登录过滤器 -->
	<beans:bean id="authenticationFilter" class="net.chat.security.AuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
		<beans:property name="authenticationSuccessHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
				<beans:property name="defaultTargetUrl" value="/account/list" />
			</beans:bean>
		</beans:property>
		<beans:property name="authenticationFailureHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<beans:property name="defaultFailureUrl" value="/login.jsp" />
			</beans:bean>
		</beans:property>
	</beans:bean>


	<!-- 认证过滤器 -->
	<beans:bean id="authorizationFilter" class="net.chat.security.AuthorizationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="ssAccessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
	</beans:bean>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailService" />
	</authentication-manager>

</beans:beans>
